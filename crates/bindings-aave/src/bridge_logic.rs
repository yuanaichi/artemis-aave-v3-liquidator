pub use bridge_logic::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod bridge_logic {
    #[allow(deprecated)]
    fn __abi() -> ::ethers::core::abi::Abi {
        ::ethers::core::abi::ethabi::Contract {
            constructor: ::core::option::Option::None,
            functions: ::std::collections::BTreeMap::new(),
            events: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("BackUnbacked"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Event {
                            name: ::std::borrow::ToOwned::to_owned("BackUnbacked"),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("reserve"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: true,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("backer"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: true,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("amount"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(
                                        256usize,
                                    ),
                                    indexed: false,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("fee"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(
                                        256usize,
                                    ),
                                    indexed: false,
                                },
                            ],
                            anonymous: false,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("MintUnbacked"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Event {
                            name: ::std::borrow::ToOwned::to_owned("MintUnbacked"),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("reserve"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: true,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("user"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: false,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("onBehalfOf"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: true,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("amount"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(
                                        256usize,
                                    ),
                                    indexed: false,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("referralCode"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(16usize),
                                    indexed: true,
                                },
                            ],
                            anonymous: false,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("ReserveUsedAsCollateralEnabled"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Event {
                            name: ::std::borrow::ToOwned::to_owned(
                                "ReserveUsedAsCollateralEnabled",
                            ),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("reserve"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: true,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("user"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: true,
                                },
                            ],
                            anonymous: false,
                        },
                    ],
                ),
            ]),
            errors: ::std::collections::BTreeMap::new(),
            receive: false,
            fallback: false,
        }
    }
    ///The parsed JSON ABI of the contract.
    pub static BRIDGELOGIC_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(
        __abi,
    );
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = b"a\x1C\x1Ea\0:`\x0B\x82\x82\x829\x80Q`\0\x1A`s\x14a\0-WcNH{q`\xE0\x1B`\0R`\0`\x04R`$`\0\xFD[0`\0R`s\x81S\x82\x81\xF3\xFEs\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000\x14`\x80`@R`\x046\x10a\0@W`\x005`\xE0\x1C\x80c\x04\x13\xC8o\x14a\0EW\x80c\x8Et2H\x14a\0gW[`\0\x80\xFD[\x81\x80\x15a\0QW`\0\x80\xFD[Pa\0ea\0`6`\x04a\x18\"V[a\0\x99V[\0[\x81\x80\x15a\0sW`\0\x80\xFD[Pa\0\x87a\0\x826`\x04a\x18\x9BV[a\x03%V[`@Q\x90\x81R` \x01`@Q\x80\x91\x03\x90\xF3[`\x01`\x01`\xA0\x1B\x03\x84\x16`\0\x90\x81R` \x88\x90R`@\x81 \x90a\0\xBB\x82a\x05}V[\x90Pa\0\xC7\x82\x82a\x07MV[a\0\xD2\x81\x83\x87a\x07\xA7V[a\x01\xC0\x81\x01QQ`\xB0\x81\x90\x1Cd\x0F\xFF\xFF\xFF\xFF\x16\x90`0\x1C`\xFF\x16`\0a\0\xF7\x88a\n\x17V[`\x08\x86\x01\x80T`\x10\x90a\x01\x1B\x90\x84\x90`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16a\x18\xF9V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90U`\x01`\x01`\x80\x1B\x03\x16\x90P\x81`\na\x01V\x91\x90a\x1A\x08V[a\x01`\x90\x84a\x1A\x14V[\x81\x11\x15`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a\x1A\x99`\xF1\x1B\x81RP\x90a\x01\xA5W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[`@Q\x80\x91\x03\x90\xFD[Pa\x01\xB4\x85\x85\x8B`\0\x80a\n\x84V[a\x01\xE0\x84\x01Qa\x01\0\x85\x01Q`@Qc\xB3\xF1\xC9=`\xE0\x1B\x81R3`\x04\x82\x01R`\x01`\x01`\xA0\x1B\x03\x8A\x81\x16`$\x83\x01R`D\x82\x01\x8C\x90R`d\x82\x01\x92\x90\x92R`\0\x92\x91\x90\x91\x16\x90c\xB3\xF1\xC9=\x90`\x84\x01` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15a\x02\"W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02F\x91\x90a\x1A\x88V[\x90P\x80\x15a\x02\xC7Wa\x02e\x8D\x8D\x8D\x88a\x01\xC0\x01Q\x89a\x01\xE0\x01Qa\r\x1BV[\x15a\x02\xC7W`\x03\x86\x01Ta\x02\x87\x90\x8C\x90`\x01`\xA8\x1B\x90\x04a\xFF\xFF\x16`\x01a\x0F\x0EV[\x87`\x01`\x01`\xA0\x1B\x03\x16\x8A`\x01`\x01`\xA0\x1B\x03\x16~\x05\x8AV\xEA\x94e<\xDFO\x15-\"z\xCE\"\xD4\xC0\n\xD9\x9E*C\xF5\x8C\xB7\xD9\xE3\xFE\xB2\x95\xF2`@Q`@Q\x80\x91\x03\x90\xA3[`@\x80Q3\x81R` \x81\x01\x8B\x90Ra\xFF\xFF\x89\x16\x91`\x01`\x01`\xA0\x1B\x03\x80\x8C\x16\x92\x90\x8E\x16\x91\x7F\xF2Z\xF3{=>\xC2&\x06=\xC9\xBD\xC1\x03\xEC\xE7\xEB\x11\nP\xF3@\xFE\x85K\xB7\xBC\x1B\x06v\xD7\xD0\x91\x01`@Q\x80\x91\x03\x90\xA4PPPPPPPPPPPPPV[`\0\x80a\x031\x87a\x05}V[\x90Pa\x03=\x87\x82a\x07MV[`\x08\x87\x01T`\0\x90`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16\x86\x10a\x03uW`\x08\x88\x01T`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16a\x03wV[\x85[\x90P`\0a\x03\x85\x86\x86a\x0FpV[\x90P`\0a\x03\x93\x82\x88a\x1A\xAAV[\x90P`\0a\x03\xA1\x88\x85a\x1A\xC1V[a\x01\0\x86\x01Q`\x08\x8D\x01T\x91\x92Pa\x04A\x91a\x03\xC8\x91`\x01`\x01`\x80\x1B\x03\x90\x91\x16\x90a\x0F\x96V[\x86a\x01\xE0\x01Q`\x01`\x01`\xA0\x1B\x03\x16c\x18\x16\r\xDD`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x04\x0BW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x04/\x91\x90a\x1A\xD9V[a\x049\x91\x90a\x1A\xC1V[\x8C\x90\x84a\x0F\xD9V[a\x01\0\x86\x01\x81\x90Ra\x04]\x90a\x04X\x90\x85\x90a\x10NV[a\n\x17V[`\x08\x8C\x01\x80T`\0\x90a\x04z\x90\x84\x90`\x01`\x01`\x80\x1B\x03\x16a\x18\xF9V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90UPa\x04\xA7\x84a\n\x17V[`\x08\x8C\x01\x80T`\x10\x90a\x04\xCB\x90\x84\x90`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16a\x1A\xF2V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90UPa\x05\t\x85\x8B\x83`\0\x8Fa\n\x84\x90\x94\x93\x92\x91\x90c\xFF\xFF\xFF\xFF\x16V[a\x01\xE0\x85\x01Qa\x05&\x90`\x01`\x01`\xA0\x1B\x03\x8C\x16\x903\x90\x84a\x10\x8BV[`@\x80Q\x85\x81R` \x81\x01\x8A\x90R3\x91`\x01`\x01`\xA0\x1B\x03\x8D\x16\x91\x7F(\x15\x96\xE9+-\x97K\xEB}O\x12M\xF3\n\x0B9\x06{\th\x93\xE9P\x11\xCEK\xDA\xD7\x98\xB7Y\x91\x01`@Q\x80\x91\x03\x90\xA3P\x91\x93PPPP[\x95\x94PPPPPV[a\x05\x85a\x17]V[a\x05\x8Da\x17]V[`@\x80Q` \x81\x01\x82R\x84T\x81Ra\x01\xC0\x83\x01\x81\x90RQ\x90\x1Ca\xFF\xFF\x16a\x01\xA0\x82\x01R`\x01\x83\x01T`\x01`\x01`\x80\x1B\x03\x80\x82\x16a\x01\0\x84\x01\x81\x90R`\xE0\x84\x01R`\x02\x85\x01T\x80\x82\x16a\x01@\x85\x01\x81\x90Ra\x01 \x85\x01R`\x01`\x80\x1B\x92\x83\x90\x04\x82\x16a\x01`\x85\x01R\x82\x90\x04\x16a\x01\x80\x83\x01R`\x04\x80\x85\x01T`\x01`\x01`\xA0\x1B\x03\x90\x81\x16a\x01\xE0\x85\x01R`\x05\x86\x01T\x81\x16a\x02\0\x85\x01R`\x06\x86\x01T\x16a\x02 \x84\x01\x81\x90R`\x03\x86\x01T\x92\x90\x92\x04d\xFF\xFF\xFF\xFF\xFF\x16a\x02@\x84\x01R`@\x80Qc\xB1\xBF\x96-`\xE0\x1B\x81R\x90Qc\xB1\xBF\x96-\x92\x82\x81\x01\x92` \x92\x91\x90\x82\x90\x03\x01\x81\x86Z\xFA\x15\x80\x15a\x06~W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x06\xA2\x91\x90a\x1A\xD9V[\x81` \x01\x81\x81RP\x81`\0\x01\x81\x81RPP\x80a\x02\0\x01Q`\x01`\x01`\xA0\x1B\x03\x16cywC8`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\x80`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x06\xF6W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x07\x1A\x91\x90a\x1B\x1AV[d\xFF\xFF\xFF\xFF\xFF\x16a\x02`\x85\x01R``\x84\x01\x81\x90R`\x80\x84\x01\x82\x90R`@\x84\x01\x92\x90\x92R`\xC0\x83\x01R`\xA0\x82\x01R\x92\x91PPV[`\x03\x82\x01TBd\xFF\xFF\xFF\xFF\xFF\x90\x81\x16`\x01`\x80\x1B\x90\x92\x04\x16\x14\x15a\x07oWPPV[a\x07y\x82\x82a\x11-V[a\x07\x83\x82\x82a\x12\x0CV[P`\x03\x01\x80Td\xFF\xFF\xFF\xFF\xFF`\x80\x1B\x19\x16`\x01`\x80\x1BBd\xFF\xFF\xFF\xFF\xFF\x16\x02\x17\x90UV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\x19\x1B`\xF1\x1B` \x82\x01R\x81a\x07\xDEW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`\0\x80`\0a\x085\x86a\x01\xC0\x01QQg\x01\0\0\0\0\0\0\0\x81\x16\x15\x15\x91g\x02\0\0\0\0\0\0\0\x82\x16\x15\x15\x91g\x04\0\0\0\0\0\0\0\x81\x16\x15\x15\x91g\x08\0\0\0\0\0\0\0\x82\x16\x15\x15\x91g\x10\0\0\0\0\0\0\0\x16\x15\x15\x90V[\x94PPP\x92P\x92P\x82`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a27`\xF0\x1B\x81RP\x90a\x08wW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra29`\xF0\x1B` \x82\x01R\x81\x15a\x08\xB0W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\x06G`\xF3\x1B` \x82\x01R\x82\x15a\x08\xE9W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[Pa\x01\xC0\x86\x01QQ`t\x1Cd\x0F\xFF\xFF\xFF\xFF\x16\x80\x15\x80a\t\xD4WPa\x01\xC0\x87\x01QQ`0\x1C`\xFF\x16a\t\x1B\x90`\na\x1A\x08V[a\t%\x90\x82a\x1A\x14V[\x85a\t\xC7\x89a\x01\0\x01Q\x89`\x08\x01`\0\x90T\x90a\x01\0\n\x90\x04`\x01`\x01`\x80\x1B\x03\x16`\x01`\x01`\x80\x1B\x03\x16\x8Ba\x01\xE0\x01Q`\x01`\x01`\xA0\x1B\x03\x16c\xB1\xBF\x96-`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\t\x93W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\t\xB7\x91\x90a\x1A\xD9V[a\t\xC1\x91\x90a\x1A\xC1V[\x90a\x0F\x96V[a\t\xD1\x91\x90a\x1A\xC1V[\x11\x15[`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a51`\xF0\x1B\x81RP\x90a\n\rW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[PPPPPPPPV[`\0`\x01`\x01`\x80\x1B\x03\x82\x11\x15a\n\x80W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`'`$\x82\x01R\x7FSafeCast: value doesn't fit in 1`D\x82\x01Rf28 bits`\xC8\x1B`d\x82\x01R`\x84\x01a\x01\x9CV[P\x90V[a\n\xAF`@Q\x80`\x80\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81RP\x90V[a\x01@\x85\x01Q` \x86\x01Qa\n\xC3\x91a\x0F\x96V[``\x80\x83\x01\x91\x82R`\x07\x88\x01T`@\x80Qa\x01 \x81\x01\x82R`\x08\x8B\x01T`\x01`\x01`\x80\x1B\x03`\x01`\x80\x1B\x90\x91\x04\x16\x81R` \x81\x01\x88\x90R\x80\x82\x01\x87\x90R`\xC0\x80\x8B\x01Q\x94\x82\x01\x94\x90\x94R\x93Q`\x80\x85\x01R`\xA0\x80\x8A\x01Q\x90\x85\x01Ra\x01\xA0\x89\x01Q\x92\x84\x01\x92\x90\x92R`\x01`\x01`\xA0\x1B\x03\x87\x81\x16`\xE0\x85\x01Ra\x01\xE0\x89\x01Q\x81\x16a\x01\0\x85\x01R\x91Qc\xA5\x89\x87\t`\xE0\x1B\x81R\x91\x16\x91c\xA5\x89\x87\t\x91a\x0B\xD4\x91\x90`\x04\x01\x81Q\x81R` \x80\x83\x01Q\x90\x82\x01R`@\x80\x83\x01Q\x90\x82\x01R``\x80\x83\x01Q\x90\x82\x01R`\x80\x80\x83\x01Q\x90\x82\x01R`\xA0\x80\x83\x01Q\x90\x82\x01R`\xC0\x80\x83\x01Q\x90\x82\x01R`\xE0\x80\x83\x01Q`\x01`\x01`\xA0\x1B\x03\x90\x81\x16\x91\x83\x01\x91\x90\x91Ra\x01\0\x92\x83\x01Q\x16\x91\x81\x01\x91\x90\x91Ra\x01 \x01\x90V[```@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0B\xF1W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0C\x15\x91\x90a\x1BeV[`@\x84\x01R` \x83\x01R\x80\x82Ra\x0C+\x90a\n\x17V[`\x01\x87\x01\x80T`\x01`\x01`\x80\x1B\x03\x92\x83\x16`\x01`\x80\x1B\x02\x92\x16\x91\x90\x91\x17\x90U` \x81\x01Qa\x0CX\x90a\n\x17V[`\x03\x87\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90U`@\x81\x01Qa\x0C\x88\x90a\n\x17V[`\x02\x87\x01\x80T`\x01`\x01`\x80\x1B\x03\x92\x83\x16`\x01`\x80\x1B\x02\x92\x16\x91\x90\x91\x17\x90U\x80Q` \x80\x83\x01Q`@\x80\x85\x01Qa\x01\0\x8A\x01Qa\x01@\x8B\x01Q\x83Q\x96\x87R\x94\x86\x01\x93\x90\x93R\x90\x84\x01R``\x83\x01R`\x80\x82\x01R`\x01`\x01`\xA0\x1B\x03\x85\x16\x90\x7F\x80L\x9B\x84+'H\xA2+\xB6K4TS\xA3\xDE|\xA5Jl\xA4\\\xE0\rAX\x94\x97\x9E\"\x89z\x90`\xA0\x01`@Q\x80\x91\x03\x90\xA2PPPPPPV[\x81Q`\0\x90`\xD4\x1Cd\xFF\xFF\xFF\xFF\xFF\x16\x15a\x0E\xF8W`\0\x82`\x01`\x01`\xA0\x1B\x03\x16cu5\xD2F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\roW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\r\x93\x91\x90a\x1B\x93V[`\x01`\x01`\xA0\x1B\x03\x16c\x05B\x97\\`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\r\xD0W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\r\xF4\x91\x90a\x1B\x93V[\x90P\x80`\x01`\x01`\xA0\x1B\x03\x16cp|\xD7\x16`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0E4W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0EX\x91\x90a\x1B\x93V[`@Qc$tR\x15`\xE2\x1B\x81R\x7F\xD1\xD2\xCF\x86\x90\x16\x11*\x9A\xF1\x10{\xCFC\xC3u\x9D\xAF\"\xCFsJ\xADG\xD0\xC9\xC7&\xE3;\xC7\x82`\x04\x82\x01R3`$\x82\x01R`\x01`\x01`\xA0\x1B\x03\x91\x90\x91\x16\x90c\x91\xD1HT\x90`D\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0E\xC4W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0E\xE8\x91\x90a\x1A\x88V[a\x0E\xF6W`\0\x91PPa\x05tV[P[a\x0F\x04\x86\x86\x86\x86a\x13qV[\x96\x95PPPPPPV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\x80\x83\x10a\x0FHW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`\x01\x82\x81\x1B\x81\x01\x1B\x81\x15a\x0FbW\x83T\x81\x17\x84Ua\x0FjV[\x83T\x81\x19\x16\x84U[PPPPV[`\0\x81\x15a\x13\x88\x19\x83\x90\x04\x84\x11\x15\x17a\x0F\x88W`\0\x80\xFD[Pa'\x10\x91\x02a\x13\x88\x01\x04\x90V[`\0\x81\x15k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x19\x83\x90\x04\x84\x11\x15\x17a\x0F\xB8W`\0\x80\xFD[Pgge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B\x91\x02k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x01\x04\x90V[`\x01\x83\x01T`\0\x90\x81\x90a\x10\x17\x90`\x01`\x01`\x80\x1B\x03\x16gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1Ba\t\xB7a\x10\x08\x88a\x14\x0EV[a\x10\x11\x88a\x14\x0EV[\x90a\x10NV[\x90Pa\x10\"\x81a\n\x17V[`\x01\x86\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90U\x90P[\x93\x92PPPV[`\0\x81\x15gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B`\x02\x84\x04\x19\x04\x84\x11\x17\x15a\x10qW`\0\x80\xFD[Pgge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B\x91\x90\x91\x02`\x02\x82\x04\x01\x04\x90V[`@Qc#\xB8r\xDD`\xE0\x1B\x80\x82R`\x01`\x01`\xA0\x1B\x03\x85\x81\x16`\x04\x84\x01R\x84\x16`$\x83\x01R`D\x82\x01\x83\x90R\x90`\0\x80`d\x83\x82\x8AZ\xF1a\x10\xD0W=`\0\x80>=`\0\xFD[Pa\x10\xDA\x85a\x14)V[a\x11&W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\x19`$\x82\x01R\x7FGPv2: failed transferFrom\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x01\x9CV[PPPPPV[a\x01`\x81\x01Q\x15a\x11\x9CW`\0a\x11N\x82a\x01`\x01Q\x83a\x02@\x01Qa\x14\xD2V[\x90Pa\x11g\x82`\xE0\x01Q\x82a\x0F\x96\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[a\x01\0\x83\x01\x81\x90Ra\x11x\x90a\n\x17V[`\x01\x84\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UP[\x80Q\x15a\x12\x08W`\0a\x11\xB9\x82a\x01\x80\x01Q\x83a\x02@\x01Qa\x15\x18V[\x90Pa\x11\xD3\x82a\x01 \x01Q\x82a\x0F\x96\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[a\x01@\x83\x01\x81\x90Ra\x11\xE4\x90a\n\x17V[`\x02\x84\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UP[PPV[a\x12E`@Q\x80`\xC0\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81RP\x90V[a\x01\xA0\x82\x01Qa\x12TWPPPV[a\x01 \x82\x01Q\x82Qa\x12e\x91a\x0F\x96V[` \x82\x01Ra\x01@\x82\x01Q\x82Qa\x12{\x91a\x0F\x96V[`@\x82\x01R``\x82\x01Qa\x02`\x83\x01Qa\x02@\x84\x01Qa\x12\xA3\x92\x91\x90d\xFF\xFF\xFF\xFF\xFF\x16a\x15!V[``\x82\x01\x81\x90R`@\x83\x01Qa\x12\xB8\x91a\x0F\x96V[\x80\x82R` \x82\x01Q`\x80\x84\x01Q`@\x84\x01Qa\x12\xD4\x91\x90a\x1A\xC1V[a\x12\xDE\x91\x90a\x1A\xAAV[a\x12\xE8\x91\x90a\x1A\xAAV[`\x80\x82\x01\x81\x90Ra\x01\xA0\x83\x01Qa\x12\xFF\x91\x90a\x0FpV[`\xA0\x82\x01\x81\x90R\x15a\x13lWa\x13*a\x04X\x83a\x01\0\x01Q\x83`\xA0\x01Qa\x10N\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[`\x08\x84\x01\x80T`\0\x90a\x13G\x90\x84\x90`\x01`\x01`\x80\x1B\x03\x16a\x18\xF9V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90UP[PPPV[`\0a\x13\x7F\x82Qa\xFF\xFF\x16\x90V[a\x13\x8BWP`\0a\x14\x06V[`@\x80Q` \x81\x01\x90\x91R\x83T\x90\x81\x90R\x7F\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\x16a\x13\xCAWP`\x01a\x14\x06V[`@\x80Q` \x81\x01\x90\x91R\x83T\x81R`\0\x90a\x13\xE7\x90\x87\x87a\x16HV[PP\x90P\x80\x15\x80\x15a\x14\x02WP\x82Q`\xD4\x1Cd\xFF\xFF\xFF\xFF\xFF\x16\x15[\x91PP[\x94\x93PPPPV[c;\x9A\xCA\0\x81\x81\x02\x90\x81\x04\x82\x14a\x14$W`\0\x80\xFD[\x91\x90PV[`\0a\x14OV[bF\x1B\xCD`\xE5\x1B`\0R` `\x04R\x80`$RP\x80`DRP`d`\0\xFD[=\x80\x15a\x14\x8EW` \x81\x14a\x14\xBFWa\x14\x89\x7FGPv2: malformed transfer result\0`\x1Fa\x140V[a\x14\xCCV[\x82;a\x14\xB6Wa\x14\xB6s\x11\xD4\x1D\x8C\x8E\x88\x1B\x9B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`b\x1B`\x14a\x140V[`\x01\x91Pa\x14\xCCV[=`\0\x80>`\0Q\x15\x15\x91P[P\x91\x90PV[`\0\x80a\x14\xE6d\xFF\xFF\xFF\xFF\xFF\x84\x16Ba\x1A\xAAV[a\x14\xF0\x90\x85a\x1A\x14V[c\x01\xE13\x80\x90\x04\x90Pa\x15\x0E\x81gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1Ba\x1A\xC1V[\x91PP[\x92\x91PPV[`\0a\x10G\x83\x83B[`\0\x80a\x155d\xFF\xFF\xFF\xFF\xFF\x85\x16\x84a\x1A\xAAV[\x90P\x80a\x15PWgge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B\x91PPa\x10GV[`\0\x19\x81\x01`\0\x80\x80`\x02\x85\x11a\x15hW`\0a\x15mV[`\x02\x85\x03[\x92Pf\x03\x88\x82\x91\\@\0a\x15\x81\x8A\x80a\x0F\x96V[\x81a\x15\x8EWa\x15\x8Ea\x1B\xB0V[\x04\x91Pc\x01\xE13\x80a\x15\xA0\x83\x8Ba\x0F\x96V[\x81a\x15\xADWa\x15\xADa\x1B\xB0V[\x04\x90P`\0\x82a\x15\xBD\x86\x88a\x1A\x14V[a\x15\xC7\x91\x90a\x1A\x14V[`\x02\x90\x04\x90P`\0\x82\x85a\x15\xDB\x88\x8Aa\x1A\x14V[a\x15\xE5\x91\x90a\x1A\x14V[a\x15\xEF\x91\x90a\x1A\x14V[`\x06\x90\x04\x90P\x80\x82c\x01\xE13\x80a\x16\x06\x8A\x8Fa\x1A\x14V[a\x16\x10\x91\x90a\x1B\xC6V[a\x16%\x90gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1Ba\x1A\xC1V[a\x16/\x91\x90a\x1A\xC1V[a\x169\x91\x90a\x1A\xC1V[\x9B\x9APPPPPPPPPPPV[`\0\x80`\0a\x16V\x86a\x16\xF3V[\x15a\x16\xE0W`\0a\x16\x87\x87\x7F\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAAa\x177V[`\0\x81\x81R` \x87\x81R`@\x80\x83 T`\x01`\x01`\xA0\x1B\x03\x16\x80\x84R\x8A\x83R\x81\x84 \x82Q\x93\x84\x01\x90\x92R\x90T\x91\x82\x90R\x92\x93P`\xD4\x1Cd\xFF\xFF\xFF\xFF\xFF\x16\x90P\x80\x15a\x16\xDCW`\x01\x95P\x90\x93P\x91Pa\x16\xEA\x90PV[PPP[P`\0\x91P\x81\x90P\x80[\x93P\x93P\x93\x90PV[\x80Q`\0\x90\x7F\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\x16\x80\x15\x80\x15\x90a\x10GWPa\x17/`\x01\x82a\x1A\xAAV[\x16\x15\x92\x91PPV[\x81Q`\0\x90\x82\x16`\0\x19\x81\x01\x19\x81\x16\x82[`\x02\x91\x90\x91\x1C\x90\x81\x15a\x05tW`\x01\x01a\x17HV[`@Q\x80a\x02\x80\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01a\x17\xE1`@Q\x80` \x01`@R\x80`\0\x81RP\x90V[\x81R`\0` \x82\x01\x81\x90R`@\x82\x01\x81\x90R``\x82\x01\x81\x90R`\x80\x82\x01\x81\x90R`\xA0\x90\x91\x01R\x90V[`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x18\x1FW`\0\x80\xFD[PV[`\0\x80`\0\x80`\0\x80`\0`\xE0\x88\x8A\x03\x12\x15a\x18=W`\0\x80\xFD[\x875\x96P` \x88\x015\x95P`@\x88\x015\x94P``\x88\x015a\x18]\x81a\x18\nV[\x93P`\x80\x88\x015\x92P`\xA0\x88\x015a\x18t\x81a\x18\nV[\x91P`\xC0\x88\x015a\xFF\xFF\x81\x16\x81\x14a\x18\x8BW`\0\x80\xFD[\x80\x91PP\x92\x95\x98\x91\x94\x97P\x92\x95PV[`\0\x80`\0\x80`\0`\xA0\x86\x88\x03\x12\x15a\x18\xB3W`\0\x80\xFD[\x855\x94P` \x86\x015a\x18\xC5\x81a\x18\nV[\x94\x97\x94\x96PPPP`@\x83\x015\x92``\x81\x015\x92`\x80\x90\x91\x015\x91PV[cNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[`\0`\x01`\x01`\x80\x1B\x03\x80\x83\x16\x81\x85\x16\x80\x83\x03\x82\x11\x15a\x19\x1BWa\x19\x1Ba\x18\xE3V[\x01\x94\x93PPPPV[`\x01\x81\x81[\x80\x85\x11\x15a\x19_W\x81`\0\x19\x04\x82\x11\x15a\x19EWa\x19Ea\x18\xE3V[\x80\x85\x16\x15a\x19RW\x91\x81\x02\x91[\x93\x84\x1C\x93\x90\x80\x02\x90a\x19)V[P\x92P\x92\x90PV[`\0\x82a\x19vWP`\x01a\x15\x12V[\x81a\x19\x83WP`\0a\x15\x12V[\x81`\x01\x81\x14a\x19\x99W`\x02\x81\x14a\x19\xA3Wa\x19\xBFV[`\x01\x91PPa\x15\x12V[`\xFF\x84\x11\x15a\x19\xB4Wa\x19\xB4a\x18\xE3V[PP`\x01\x82\x1Ba\x15\x12V[P` \x83\x10a\x013\x83\x10\x16`N\x84\x10`\x0B\x84\x10\x16\x17\x15a\x19\xE2WP\x81\x81\na\x15\x12V[a\x19\xEC\x83\x83a\x19$V[\x80`\0\x19\x04\x82\x11\x15a\x1A\0Wa\x1A\0a\x18\xE3V[\x02\x93\x92PPPV[`\0a\x10G\x83\x83a\x19gV[`\0\x81`\0\x19\x04\x83\x11\x82\x15\x15\x16\x15a\x1A.Wa\x1A.a\x18\xE3V[P\x02\x90V[`\0` \x80\x83R\x83Q\x80\x82\x85\x01R`\0[\x81\x81\x10\x15a\x1A`W\x85\x81\x01\x83\x01Q\x85\x82\x01`@\x01R\x82\x01a\x1ADV[\x81\x81\x11\x15a\x1ArW`\0`@\x83\x87\x01\x01R[P`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01`@\x01\x93\x92PPPV[`\0` \x82\x84\x03\x12\x15a\x1A\x9AW`\0\x80\xFD[\x81Q\x80\x15\x15\x81\x14a\x10GW`\0\x80\xFD[`\0\x82\x82\x10\x15a\x1A\xBCWa\x1A\xBCa\x18\xE3V[P\x03\x90V[`\0\x82\x19\x82\x11\x15a\x1A\xD4Wa\x1A\xD4a\x18\xE3V[P\x01\x90V[`\0` \x82\x84\x03\x12\x15a\x1A\xEBW`\0\x80\xFD[PQ\x91\x90PV[`\0`\x01`\x01`\x80\x1B\x03\x83\x81\x16\x90\x83\x16\x81\x81\x10\x15a\x1B\x12Wa\x1B\x12a\x18\xE3V[\x03\x93\x92PPPV[`\0\x80`\0\x80`\x80\x85\x87\x03\x12\x15a\x1B0W`\0\x80\xFD[\x84Q\x93P` \x85\x01Q\x92P`@\x85\x01Q\x91P``\x85\x01Qd\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x14a\x1BZW`\0\x80\xFD[\x93\x96\x92\x95P\x90\x93PPV[`\0\x80`\0``\x84\x86\x03\x12\x15a\x1BzW`\0\x80\xFD[\x83Q\x92P` \x84\x01Q\x91P`@\x84\x01Q\x90P\x92P\x92P\x92V[`\0` \x82\x84\x03\x12\x15a\x1B\xA5W`\0\x80\xFD[\x81Qa\x10G\x81a\x18\nV[cNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[`\0\x82a\x1B\xE3WcNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[P\x04\x90V\xFE\xA2dipfsX\"\x12 0\x0Bh\xF2\x7F \x87\xF4\xCB\x87H\xEF\xE8\xCA\x0B\xC9\xC8\xE0\xEA\xDB\x1D\x7F\xB9\xCB\xDB\xD8\xBFIFM7:dsolcC\0\x08\n\x003";
    /// The bytecode of the contract.
    pub static BRIDGELOGIC_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = b"s\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000\x14`\x80`@R`\x046\x10a\0@W`\x005`\xE0\x1C\x80c\x04\x13\xC8o\x14a\0EW\x80c\x8Et2H\x14a\0gW[`\0\x80\xFD[\x81\x80\x15a\0QW`\0\x80\xFD[Pa\0ea\0`6`\x04a\x18\"V[a\0\x99V[\0[\x81\x80\x15a\0sW`\0\x80\xFD[Pa\0\x87a\0\x826`\x04a\x18\x9BV[a\x03%V[`@Q\x90\x81R` \x01`@Q\x80\x91\x03\x90\xF3[`\x01`\x01`\xA0\x1B\x03\x84\x16`\0\x90\x81R` \x88\x90R`@\x81 \x90a\0\xBB\x82a\x05}V[\x90Pa\0\xC7\x82\x82a\x07MV[a\0\xD2\x81\x83\x87a\x07\xA7V[a\x01\xC0\x81\x01QQ`\xB0\x81\x90\x1Cd\x0F\xFF\xFF\xFF\xFF\x16\x90`0\x1C`\xFF\x16`\0a\0\xF7\x88a\n\x17V[`\x08\x86\x01\x80T`\x10\x90a\x01\x1B\x90\x84\x90`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16a\x18\xF9V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90U`\x01`\x01`\x80\x1B\x03\x16\x90P\x81`\na\x01V\x91\x90a\x1A\x08V[a\x01`\x90\x84a\x1A\x14V[\x81\x11\x15`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a\x1A\x99`\xF1\x1B\x81RP\x90a\x01\xA5W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[`@Q\x80\x91\x03\x90\xFD[Pa\x01\xB4\x85\x85\x8B`\0\x80a\n\x84V[a\x01\xE0\x84\x01Qa\x01\0\x85\x01Q`@Qc\xB3\xF1\xC9=`\xE0\x1B\x81R3`\x04\x82\x01R`\x01`\x01`\xA0\x1B\x03\x8A\x81\x16`$\x83\x01R`D\x82\x01\x8C\x90R`d\x82\x01\x92\x90\x92R`\0\x92\x91\x90\x91\x16\x90c\xB3\xF1\xC9=\x90`\x84\x01` `@Q\x80\x83\x03\x81`\0\x87Z\xF1\x15\x80\x15a\x02\"W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x02F\x91\x90a\x1A\x88V[\x90P\x80\x15a\x02\xC7Wa\x02e\x8D\x8D\x8D\x88a\x01\xC0\x01Q\x89a\x01\xE0\x01Qa\r\x1BV[\x15a\x02\xC7W`\x03\x86\x01Ta\x02\x87\x90\x8C\x90`\x01`\xA8\x1B\x90\x04a\xFF\xFF\x16`\x01a\x0F\x0EV[\x87`\x01`\x01`\xA0\x1B\x03\x16\x8A`\x01`\x01`\xA0\x1B\x03\x16~\x05\x8AV\xEA\x94e<\xDFO\x15-\"z\xCE\"\xD4\xC0\n\xD9\x9E*C\xF5\x8C\xB7\xD9\xE3\xFE\xB2\x95\xF2`@Q`@Q\x80\x91\x03\x90\xA3[`@\x80Q3\x81R` \x81\x01\x8B\x90Ra\xFF\xFF\x89\x16\x91`\x01`\x01`\xA0\x1B\x03\x80\x8C\x16\x92\x90\x8E\x16\x91\x7F\xF2Z\xF3{=>\xC2&\x06=\xC9\xBD\xC1\x03\xEC\xE7\xEB\x11\nP\xF3@\xFE\x85K\xB7\xBC\x1B\x06v\xD7\xD0\x91\x01`@Q\x80\x91\x03\x90\xA4PPPPPPPPPPPPPV[`\0\x80a\x031\x87a\x05}V[\x90Pa\x03=\x87\x82a\x07MV[`\x08\x87\x01T`\0\x90`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16\x86\x10a\x03uW`\x08\x88\x01T`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16a\x03wV[\x85[\x90P`\0a\x03\x85\x86\x86a\x0FpV[\x90P`\0a\x03\x93\x82\x88a\x1A\xAAV[\x90P`\0a\x03\xA1\x88\x85a\x1A\xC1V[a\x01\0\x86\x01Q`\x08\x8D\x01T\x91\x92Pa\x04A\x91a\x03\xC8\x91`\x01`\x01`\x80\x1B\x03\x90\x91\x16\x90a\x0F\x96V[\x86a\x01\xE0\x01Q`\x01`\x01`\xA0\x1B\x03\x16c\x18\x16\r\xDD`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x04\x0BW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x04/\x91\x90a\x1A\xD9V[a\x049\x91\x90a\x1A\xC1V[\x8C\x90\x84a\x0F\xD9V[a\x01\0\x86\x01\x81\x90Ra\x04]\x90a\x04X\x90\x85\x90a\x10NV[a\n\x17V[`\x08\x8C\x01\x80T`\0\x90a\x04z\x90\x84\x90`\x01`\x01`\x80\x1B\x03\x16a\x18\xF9V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90UPa\x04\xA7\x84a\n\x17V[`\x08\x8C\x01\x80T`\x10\x90a\x04\xCB\x90\x84\x90`\x01`\x80\x1B\x90\x04`\x01`\x01`\x80\x1B\x03\x16a\x1A\xF2V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90UPa\x05\t\x85\x8B\x83`\0\x8Fa\n\x84\x90\x94\x93\x92\x91\x90c\xFF\xFF\xFF\xFF\x16V[a\x01\xE0\x85\x01Qa\x05&\x90`\x01`\x01`\xA0\x1B\x03\x8C\x16\x903\x90\x84a\x10\x8BV[`@\x80Q\x85\x81R` \x81\x01\x8A\x90R3\x91`\x01`\x01`\xA0\x1B\x03\x8D\x16\x91\x7F(\x15\x96\xE9+-\x97K\xEB}O\x12M\xF3\n\x0B9\x06{\th\x93\xE9P\x11\xCEK\xDA\xD7\x98\xB7Y\x91\x01`@Q\x80\x91\x03\x90\xA3P\x91\x93PPPP[\x95\x94PPPPPV[a\x05\x85a\x17]V[a\x05\x8Da\x17]V[`@\x80Q` \x81\x01\x82R\x84T\x81Ra\x01\xC0\x83\x01\x81\x90RQ\x90\x1Ca\xFF\xFF\x16a\x01\xA0\x82\x01R`\x01\x83\x01T`\x01`\x01`\x80\x1B\x03\x80\x82\x16a\x01\0\x84\x01\x81\x90R`\xE0\x84\x01R`\x02\x85\x01T\x80\x82\x16a\x01@\x85\x01\x81\x90Ra\x01 \x85\x01R`\x01`\x80\x1B\x92\x83\x90\x04\x82\x16a\x01`\x85\x01R\x82\x90\x04\x16a\x01\x80\x83\x01R`\x04\x80\x85\x01T`\x01`\x01`\xA0\x1B\x03\x90\x81\x16a\x01\xE0\x85\x01R`\x05\x86\x01T\x81\x16a\x02\0\x85\x01R`\x06\x86\x01T\x16a\x02 \x84\x01\x81\x90R`\x03\x86\x01T\x92\x90\x92\x04d\xFF\xFF\xFF\xFF\xFF\x16a\x02@\x84\x01R`@\x80Qc\xB1\xBF\x96-`\xE0\x1B\x81R\x90Qc\xB1\xBF\x96-\x92\x82\x81\x01\x92` \x92\x91\x90\x82\x90\x03\x01\x81\x86Z\xFA\x15\x80\x15a\x06~W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x06\xA2\x91\x90a\x1A\xD9V[\x81` \x01\x81\x81RP\x81`\0\x01\x81\x81RPP\x80a\x02\0\x01Q`\x01`\x01`\xA0\x1B\x03\x16cywC8`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\x80`@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x06\xF6W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x07\x1A\x91\x90a\x1B\x1AV[d\xFF\xFF\xFF\xFF\xFF\x16a\x02`\x85\x01R``\x84\x01\x81\x90R`\x80\x84\x01\x82\x90R`@\x84\x01\x92\x90\x92R`\xC0\x83\x01R`\xA0\x82\x01R\x92\x91PPV[`\x03\x82\x01TBd\xFF\xFF\xFF\xFF\xFF\x90\x81\x16`\x01`\x80\x1B\x90\x92\x04\x16\x14\x15a\x07oWPPV[a\x07y\x82\x82a\x11-V[a\x07\x83\x82\x82a\x12\x0CV[P`\x03\x01\x80Td\xFF\xFF\xFF\xFF\xFF`\x80\x1B\x19\x16`\x01`\x80\x1BBd\xFF\xFF\xFF\xFF\xFF\x16\x02\x17\x90UV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\x19\x1B`\xF1\x1B` \x82\x01R\x81a\x07\xDEW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`\0\x80`\0a\x085\x86a\x01\xC0\x01QQg\x01\0\0\0\0\0\0\0\x81\x16\x15\x15\x91g\x02\0\0\0\0\0\0\0\x82\x16\x15\x15\x91g\x04\0\0\0\0\0\0\0\x81\x16\x15\x15\x91g\x08\0\0\0\0\0\0\0\x82\x16\x15\x15\x91g\x10\0\0\0\0\0\0\0\x16\x15\x15\x90V[\x94PPP\x92P\x92P\x82`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a27`\xF0\x1B\x81RP\x90a\x08wW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra29`\xF0\x1B` \x82\x01R\x81\x15a\x08\xB0W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\x06G`\xF3\x1B` \x82\x01R\x82\x15a\x08\xE9W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[Pa\x01\xC0\x86\x01QQ`t\x1Cd\x0F\xFF\xFF\xFF\xFF\x16\x80\x15\x80a\t\xD4WPa\x01\xC0\x87\x01QQ`0\x1C`\xFF\x16a\t\x1B\x90`\na\x1A\x08V[a\t%\x90\x82a\x1A\x14V[\x85a\t\xC7\x89a\x01\0\x01Q\x89`\x08\x01`\0\x90T\x90a\x01\0\n\x90\x04`\x01`\x01`\x80\x1B\x03\x16`\x01`\x01`\x80\x1B\x03\x16\x8Ba\x01\xE0\x01Q`\x01`\x01`\xA0\x1B\x03\x16c\xB1\xBF\x96-`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\t\x93W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\t\xB7\x91\x90a\x1A\xD9V[a\t\xC1\x91\x90a\x1A\xC1V[\x90a\x0F\x96V[a\t\xD1\x91\x90a\x1A\xC1V[\x11\x15[`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a51`\xF0\x1B\x81RP\x90a\n\rW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[PPPPPPPPV[`\0`\x01`\x01`\x80\x1B\x03\x82\x11\x15a\n\x80W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`'`$\x82\x01R\x7FSafeCast: value doesn't fit in 1`D\x82\x01Rf28 bits`\xC8\x1B`d\x82\x01R`\x84\x01a\x01\x9CV[P\x90V[a\n\xAF`@Q\x80`\x80\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81RP\x90V[a\x01@\x85\x01Q` \x86\x01Qa\n\xC3\x91a\x0F\x96V[``\x80\x83\x01\x91\x82R`\x07\x88\x01T`@\x80Qa\x01 \x81\x01\x82R`\x08\x8B\x01T`\x01`\x01`\x80\x1B\x03`\x01`\x80\x1B\x90\x91\x04\x16\x81R` \x81\x01\x88\x90R\x80\x82\x01\x87\x90R`\xC0\x80\x8B\x01Q\x94\x82\x01\x94\x90\x94R\x93Q`\x80\x85\x01R`\xA0\x80\x8A\x01Q\x90\x85\x01Ra\x01\xA0\x89\x01Q\x92\x84\x01\x92\x90\x92R`\x01`\x01`\xA0\x1B\x03\x87\x81\x16`\xE0\x85\x01Ra\x01\xE0\x89\x01Q\x81\x16a\x01\0\x85\x01R\x91Qc\xA5\x89\x87\t`\xE0\x1B\x81R\x91\x16\x91c\xA5\x89\x87\t\x91a\x0B\xD4\x91\x90`\x04\x01\x81Q\x81R` \x80\x83\x01Q\x90\x82\x01R`@\x80\x83\x01Q\x90\x82\x01R``\x80\x83\x01Q\x90\x82\x01R`\x80\x80\x83\x01Q\x90\x82\x01R`\xA0\x80\x83\x01Q\x90\x82\x01R`\xC0\x80\x83\x01Q\x90\x82\x01R`\xE0\x80\x83\x01Q`\x01`\x01`\xA0\x1B\x03\x90\x81\x16\x91\x83\x01\x91\x90\x91Ra\x01\0\x92\x83\x01Q\x16\x91\x81\x01\x91\x90\x91Ra\x01 \x01\x90V[```@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0B\xF1W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0C\x15\x91\x90a\x1BeV[`@\x84\x01R` \x83\x01R\x80\x82Ra\x0C+\x90a\n\x17V[`\x01\x87\x01\x80T`\x01`\x01`\x80\x1B\x03\x92\x83\x16`\x01`\x80\x1B\x02\x92\x16\x91\x90\x91\x17\x90U` \x81\x01Qa\x0CX\x90a\n\x17V[`\x03\x87\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90U`@\x81\x01Qa\x0C\x88\x90a\n\x17V[`\x02\x87\x01\x80T`\x01`\x01`\x80\x1B\x03\x92\x83\x16`\x01`\x80\x1B\x02\x92\x16\x91\x90\x91\x17\x90U\x80Q` \x80\x83\x01Q`@\x80\x85\x01Qa\x01\0\x8A\x01Qa\x01@\x8B\x01Q\x83Q\x96\x87R\x94\x86\x01\x93\x90\x93R\x90\x84\x01R``\x83\x01R`\x80\x82\x01R`\x01`\x01`\xA0\x1B\x03\x85\x16\x90\x7F\x80L\x9B\x84+'H\xA2+\xB6K4TS\xA3\xDE|\xA5Jl\xA4\\\xE0\rAX\x94\x97\x9E\"\x89z\x90`\xA0\x01`@Q\x80\x91\x03\x90\xA2PPPPPPV[\x81Q`\0\x90`\xD4\x1Cd\xFF\xFF\xFF\xFF\xFF\x16\x15a\x0E\xF8W`\0\x82`\x01`\x01`\xA0\x1B\x03\x16cu5\xD2F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\roW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\r\x93\x91\x90a\x1B\x93V[`\x01`\x01`\xA0\x1B\x03\x16c\x05B\x97\\`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\r\xD0W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\r\xF4\x91\x90a\x1B\x93V[\x90P\x80`\x01`\x01`\xA0\x1B\x03\x16cp|\xD7\x16`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0E4W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0EX\x91\x90a\x1B\x93V[`@Qc$tR\x15`\xE2\x1B\x81R\x7F\xD1\xD2\xCF\x86\x90\x16\x11*\x9A\xF1\x10{\xCFC\xC3u\x9D\xAF\"\xCFsJ\xADG\xD0\xC9\xC7&\xE3;\xC7\x82`\x04\x82\x01R3`$\x82\x01R`\x01`\x01`\xA0\x1B\x03\x91\x90\x91\x16\x90c\x91\xD1HT\x90`D\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0E\xC4W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0E\xE8\x91\x90a\x1A\x88V[a\x0E\xF6W`\0\x91PPa\x05tV[P[a\x0F\x04\x86\x86\x86\x86a\x13qV[\x96\x95PPPPPPV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\x80\x83\x10a\x0FHW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x9C\x91\x90a\x1A3V[P`\x01\x82\x81\x1B\x81\x01\x1B\x81\x15a\x0FbW\x83T\x81\x17\x84Ua\x0FjV[\x83T\x81\x19\x16\x84U[PPPPV[`\0\x81\x15a\x13\x88\x19\x83\x90\x04\x84\x11\x15\x17a\x0F\x88W`\0\x80\xFD[Pa'\x10\x91\x02a\x13\x88\x01\x04\x90V[`\0\x81\x15k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x19\x83\x90\x04\x84\x11\x15\x17a\x0F\xB8W`\0\x80\xFD[Pgge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B\x91\x02k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x01\x04\x90V[`\x01\x83\x01T`\0\x90\x81\x90a\x10\x17\x90`\x01`\x01`\x80\x1B\x03\x16gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1Ba\t\xB7a\x10\x08\x88a\x14\x0EV[a\x10\x11\x88a\x14\x0EV[\x90a\x10NV[\x90Pa\x10\"\x81a\n\x17V[`\x01\x86\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90U\x90P[\x93\x92PPPV[`\0\x81\x15gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B`\x02\x84\x04\x19\x04\x84\x11\x17\x15a\x10qW`\0\x80\xFD[Pgge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B\x91\x90\x91\x02`\x02\x82\x04\x01\x04\x90V[`@Qc#\xB8r\xDD`\xE0\x1B\x80\x82R`\x01`\x01`\xA0\x1B\x03\x85\x81\x16`\x04\x84\x01R\x84\x16`$\x83\x01R`D\x82\x01\x83\x90R\x90`\0\x80`d\x83\x82\x8AZ\xF1a\x10\xD0W=`\0\x80>=`\0\xFD[Pa\x10\xDA\x85a\x14)V[a\x11&W`@QbF\x1B\xCD`\xE5\x1B\x81R` `\x04\x82\x01R`\x19`$\x82\x01R\x7FGPv2: failed transferFrom\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x01\x9CV[PPPPPV[a\x01`\x81\x01Q\x15a\x11\x9CW`\0a\x11N\x82a\x01`\x01Q\x83a\x02@\x01Qa\x14\xD2V[\x90Pa\x11g\x82`\xE0\x01Q\x82a\x0F\x96\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[a\x01\0\x83\x01\x81\x90Ra\x11x\x90a\n\x17V[`\x01\x84\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UP[\x80Q\x15a\x12\x08W`\0a\x11\xB9\x82a\x01\x80\x01Q\x83a\x02@\x01Qa\x15\x18V[\x90Pa\x11\xD3\x82a\x01 \x01Q\x82a\x0F\x96\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[a\x01@\x83\x01\x81\x90Ra\x11\xE4\x90a\n\x17V[`\x02\x84\x01\x80T`\x01`\x01`\x80\x1B\x03\x19\x16`\x01`\x01`\x80\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UP[PPV[a\x12E`@Q\x80`\xC0\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81RP\x90V[a\x01\xA0\x82\x01Qa\x12TWPPPV[a\x01 \x82\x01Q\x82Qa\x12e\x91a\x0F\x96V[` \x82\x01Ra\x01@\x82\x01Q\x82Qa\x12{\x91a\x0F\x96V[`@\x82\x01R``\x82\x01Qa\x02`\x83\x01Qa\x02@\x84\x01Qa\x12\xA3\x92\x91\x90d\xFF\xFF\xFF\xFF\xFF\x16a\x15!V[``\x82\x01\x81\x90R`@\x83\x01Qa\x12\xB8\x91a\x0F\x96V[\x80\x82R` \x82\x01Q`\x80\x84\x01Q`@\x84\x01Qa\x12\xD4\x91\x90a\x1A\xC1V[a\x12\xDE\x91\x90a\x1A\xAAV[a\x12\xE8\x91\x90a\x1A\xAAV[`\x80\x82\x01\x81\x90Ra\x01\xA0\x83\x01Qa\x12\xFF\x91\x90a\x0FpV[`\xA0\x82\x01\x81\x90R\x15a\x13lWa\x13*a\x04X\x83a\x01\0\x01Q\x83`\xA0\x01Qa\x10N\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[`\x08\x84\x01\x80T`\0\x90a\x13G\x90\x84\x90`\x01`\x01`\x80\x1B\x03\x16a\x18\xF9V[\x92Pa\x01\0\n\x81T\x81`\x01`\x01`\x80\x1B\x03\x02\x19\x16\x90\x83`\x01`\x01`\x80\x1B\x03\x16\x02\x17\x90UP[PPPV[`\0a\x13\x7F\x82Qa\xFF\xFF\x16\x90V[a\x13\x8BWP`\0a\x14\x06V[`@\x80Q` \x81\x01\x90\x91R\x83T\x90\x81\x90R\x7F\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\x16a\x13\xCAWP`\x01a\x14\x06V[`@\x80Q` \x81\x01\x90\x91R\x83T\x81R`\0\x90a\x13\xE7\x90\x87\x87a\x16HV[PP\x90P\x80\x15\x80\x15a\x14\x02WP\x82Q`\xD4\x1Cd\xFF\xFF\xFF\xFF\xFF\x16\x15[\x91PP[\x94\x93PPPPV[c;\x9A\xCA\0\x81\x81\x02\x90\x81\x04\x82\x14a\x14$W`\0\x80\xFD[\x91\x90PV[`\0a\x14OV[bF\x1B\xCD`\xE5\x1B`\0R` `\x04R\x80`$RP\x80`DRP`d`\0\xFD[=\x80\x15a\x14\x8EW` \x81\x14a\x14\xBFWa\x14\x89\x7FGPv2: malformed transfer result\0`\x1Fa\x140V[a\x14\xCCV[\x82;a\x14\xB6Wa\x14\xB6s\x11\xD4\x1D\x8C\x8E\x88\x1B\x9B\xDD\x08\x18H\x18\xDB\xDB\x9D\x1C\x98X\xDD`b\x1B`\x14a\x140V[`\x01\x91Pa\x14\xCCV[=`\0\x80>`\0Q\x15\x15\x91P[P\x91\x90PV[`\0\x80a\x14\xE6d\xFF\xFF\xFF\xFF\xFF\x84\x16Ba\x1A\xAAV[a\x14\xF0\x90\x85a\x1A\x14V[c\x01\xE13\x80\x90\x04\x90Pa\x15\x0E\x81gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1Ba\x1A\xC1V[\x91PP[\x92\x91PPV[`\0a\x10G\x83\x83B[`\0\x80a\x155d\xFF\xFF\xFF\xFF\xFF\x85\x16\x84a\x1A\xAAV[\x90P\x80a\x15PWgge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1B\x91PPa\x10GV[`\0\x19\x81\x01`\0\x80\x80`\x02\x85\x11a\x15hW`\0a\x15mV[`\x02\x85\x03[\x92Pf\x03\x88\x82\x91\\@\0a\x15\x81\x8A\x80a\x0F\x96V[\x81a\x15\x8EWa\x15\x8Ea\x1B\xB0V[\x04\x91Pc\x01\xE13\x80a\x15\xA0\x83\x8Ba\x0F\x96V[\x81a\x15\xADWa\x15\xADa\x1B\xB0V[\x04\x90P`\0\x82a\x15\xBD\x86\x88a\x1A\x14V[a\x15\xC7\x91\x90a\x1A\x14V[`\x02\x90\x04\x90P`\0\x82\x85a\x15\xDB\x88\x8Aa\x1A\x14V[a\x15\xE5\x91\x90a\x1A\x14V[a\x15\xEF\x91\x90a\x1A\x14V[`\x06\x90\x04\x90P\x80\x82c\x01\xE13\x80a\x16\x06\x8A\x8Fa\x1A\x14V[a\x16\x10\x91\x90a\x1B\xC6V[a\x16%\x90gge\xC7\x93\xFA\x10\x07\x9D`\x1B\x1Ba\x1A\xC1V[a\x16/\x91\x90a\x1A\xC1V[a\x169\x91\x90a\x1A\xC1V[\x9B\x9APPPPPPPPPPPV[`\0\x80`\0a\x16V\x86a\x16\xF3V[\x15a\x16\xE0W`\0a\x16\x87\x87\x7F\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAAa\x177V[`\0\x81\x81R` \x87\x81R`@\x80\x83 T`\x01`\x01`\xA0\x1B\x03\x16\x80\x84R\x8A\x83R\x81\x84 \x82Q\x93\x84\x01\x90\x92R\x90T\x91\x82\x90R\x92\x93P`\xD4\x1Cd\xFF\xFF\xFF\xFF\xFF\x16\x90P\x80\x15a\x16\xDCW`\x01\x95P\x90\x93P\x91Pa\x16\xEA\x90PV[PPP[P`\0\x91P\x81\x90P\x80[\x93P\x93P\x93\x90PV[\x80Q`\0\x90\x7F\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\x16\x80\x15\x80\x15\x90a\x10GWPa\x17/`\x01\x82a\x1A\xAAV[\x16\x15\x92\x91PPV[\x81Q`\0\x90\x82\x16`\0\x19\x81\x01\x19\x81\x16\x82[`\x02\x91\x90\x91\x1C\x90\x81\x15a\x05tW`\x01\x01a\x17HV[`@Q\x80a\x02\x80\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01a\x17\xE1`@Q\x80` \x01`@R\x80`\0\x81RP\x90V[\x81R`\0` \x82\x01\x81\x90R`@\x82\x01\x81\x90R``\x82\x01\x81\x90R`\x80\x82\x01\x81\x90R`\xA0\x90\x91\x01R\x90V[`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x18\x1FW`\0\x80\xFD[PV[`\0\x80`\0\x80`\0\x80`\0`\xE0\x88\x8A\x03\x12\x15a\x18=W`\0\x80\xFD[\x875\x96P` \x88\x015\x95P`@\x88\x015\x94P``\x88\x015a\x18]\x81a\x18\nV[\x93P`\x80\x88\x015\x92P`\xA0\x88\x015a\x18t\x81a\x18\nV[\x91P`\xC0\x88\x015a\xFF\xFF\x81\x16\x81\x14a\x18\x8BW`\0\x80\xFD[\x80\x91PP\x92\x95\x98\x91\x94\x97P\x92\x95PV[`\0\x80`\0\x80`\0`\xA0\x86\x88\x03\x12\x15a\x18\xB3W`\0\x80\xFD[\x855\x94P` \x86\x015a\x18\xC5\x81a\x18\nV[\x94\x97\x94\x96PPPP`@\x83\x015\x92``\x81\x015\x92`\x80\x90\x91\x015\x91PV[cNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[`\0`\x01`\x01`\x80\x1B\x03\x80\x83\x16\x81\x85\x16\x80\x83\x03\x82\x11\x15a\x19\x1BWa\x19\x1Ba\x18\xE3V[\x01\x94\x93PPPPV[`\x01\x81\x81[\x80\x85\x11\x15a\x19_W\x81`\0\x19\x04\x82\x11\x15a\x19EWa\x19Ea\x18\xE3V[\x80\x85\x16\x15a\x19RW\x91\x81\x02\x91[\x93\x84\x1C\x93\x90\x80\x02\x90a\x19)V[P\x92P\x92\x90PV[`\0\x82a\x19vWP`\x01a\x15\x12V[\x81a\x19\x83WP`\0a\x15\x12V[\x81`\x01\x81\x14a\x19\x99W`\x02\x81\x14a\x19\xA3Wa\x19\xBFV[`\x01\x91PPa\x15\x12V[`\xFF\x84\x11\x15a\x19\xB4Wa\x19\xB4a\x18\xE3V[PP`\x01\x82\x1Ba\x15\x12V[P` \x83\x10a\x013\x83\x10\x16`N\x84\x10`\x0B\x84\x10\x16\x17\x15a\x19\xE2WP\x81\x81\na\x15\x12V[a\x19\xEC\x83\x83a\x19$V[\x80`\0\x19\x04\x82\x11\x15a\x1A\0Wa\x1A\0a\x18\xE3V[\x02\x93\x92PPPV[`\0a\x10G\x83\x83a\x19gV[`\0\x81`\0\x19\x04\x83\x11\x82\x15\x15\x16\x15a\x1A.Wa\x1A.a\x18\xE3V[P\x02\x90V[`\0` \x80\x83R\x83Q\x80\x82\x85\x01R`\0[\x81\x81\x10\x15a\x1A`W\x85\x81\x01\x83\x01Q\x85\x82\x01`@\x01R\x82\x01a\x1ADV[\x81\x81\x11\x15a\x1ArW`\0`@\x83\x87\x01\x01R[P`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01`@\x01\x93\x92PPPV[`\0` \x82\x84\x03\x12\x15a\x1A\x9AW`\0\x80\xFD[\x81Q\x80\x15\x15\x81\x14a\x10GW`\0\x80\xFD[`\0\x82\x82\x10\x15a\x1A\xBCWa\x1A\xBCa\x18\xE3V[P\x03\x90V[`\0\x82\x19\x82\x11\x15a\x1A\xD4Wa\x1A\xD4a\x18\xE3V[P\x01\x90V[`\0` \x82\x84\x03\x12\x15a\x1A\xEBW`\0\x80\xFD[PQ\x91\x90PV[`\0`\x01`\x01`\x80\x1B\x03\x83\x81\x16\x90\x83\x16\x81\x81\x10\x15a\x1B\x12Wa\x1B\x12a\x18\xE3V[\x03\x93\x92PPPV[`\0\x80`\0\x80`\x80\x85\x87\x03\x12\x15a\x1B0W`\0\x80\xFD[\x84Q\x93P` \x85\x01Q\x92P`@\x85\x01Q\x91P``\x85\x01Qd\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x14a\x1BZW`\0\x80\xFD[\x93\x96\x92\x95P\x90\x93PPV[`\0\x80`\0``\x84\x86\x03\x12\x15a\x1BzW`\0\x80\xFD[\x83Q\x92P` \x84\x01Q\x91P`@\x84\x01Q\x90P\x92P\x92P\x92V[`\0` \x82\x84\x03\x12\x15a\x1B\xA5W`\0\x80\xFD[\x81Qa\x10G\x81a\x18\nV[cNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[`\0\x82a\x1B\xE3WcNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[P\x04\x90V\xFE\xA2dipfsX\"\x12 0\x0Bh\xF2\x7F \x87\xF4\xCB\x87H\xEF\xE8\xCA\x0B\xC9\xC8\xE0\xEA\xDB\x1D\x7F\xB9\xCB\xDB\xD8\xBFIFM7:dsolcC\0\x08\n\x003";
    /// The deployed bytecode of the contract.
    pub static BRIDGELOGIC_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct BridgeLogic<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for BridgeLogic<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for BridgeLogic<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for BridgeLogic<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for BridgeLogic<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(::core::stringify!(BridgeLogic))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> BridgeLogic<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    BRIDGELOGIC_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                BRIDGELOGIC_ABI.clone(),
                BRIDGELOGIC_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Gets the contract's `BackUnbacked` event
        pub fn back_unbacked_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            BackUnbackedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `MintUnbacked` event
        pub fn mint_unbacked_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            MintUnbackedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `ReserveUsedAsCollateralEnabled` event
        pub fn reserve_used_as_collateral_enabled_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ReserveUsedAsCollateralEnabledFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            BridgeLogicEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for BridgeLogic<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "BackUnbacked",
        abi = "BackUnbacked(address,address,uint256,uint256)"
    )]
    pub struct BackUnbackedFilter {
        #[ethevent(indexed)]
        pub reserve: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub backer: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
        pub fee: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "MintUnbacked",
        abi = "MintUnbacked(address,address,address,uint256,uint16)"
    )]
    pub struct MintUnbackedFilter {
        #[ethevent(indexed)]
        pub reserve: ::ethers::core::types::Address,
        pub user: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub on_behalf_of: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
        #[ethevent(indexed)]
        pub referral_code: u16,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "ReserveUsedAsCollateralEnabled",
        abi = "ReserveUsedAsCollateralEnabled(address,address)"
    )]
    pub struct ReserveUsedAsCollateralEnabledFilter {
        #[ethevent(indexed)]
        pub reserve: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub user: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's events
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        serde::Serialize,
        serde::Deserialize,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub enum BridgeLogicEvents {
        BackUnbackedFilter(BackUnbackedFilter),
        MintUnbackedFilter(MintUnbackedFilter),
        ReserveUsedAsCollateralEnabledFilter(ReserveUsedAsCollateralEnabledFilter),
    }
    impl ::ethers::contract::EthLogDecode for BridgeLogicEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = BackUnbackedFilter::decode_log(log) {
                return Ok(BridgeLogicEvents::BackUnbackedFilter(decoded));
            }
            if let Ok(decoded) = MintUnbackedFilter::decode_log(log) {
                return Ok(BridgeLogicEvents::MintUnbackedFilter(decoded));
            }
            if let Ok(decoded) = ReserveUsedAsCollateralEnabledFilter::decode_log(log) {
                return Ok(
                    BridgeLogicEvents::ReserveUsedAsCollateralEnabledFilter(decoded),
                );
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for BridgeLogicEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::BackUnbackedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::MintUnbackedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ReserveUsedAsCollateralEnabledFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<BackUnbackedFilter> for BridgeLogicEvents {
        fn from(value: BackUnbackedFilter) -> Self {
            Self::BackUnbackedFilter(value)
        }
    }
    impl ::core::convert::From<MintUnbackedFilter> for BridgeLogicEvents {
        fn from(value: MintUnbackedFilter) -> Self {
            Self::MintUnbackedFilter(value)
        }
    }
    impl ::core::convert::From<ReserveUsedAsCollateralEnabledFilter>
    for BridgeLogicEvents {
        fn from(value: ReserveUsedAsCollateralEnabledFilter) -> Self {
            Self::ReserveUsedAsCollateralEnabledFilter(value)
        }
    }
}
