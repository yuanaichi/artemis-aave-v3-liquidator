pub use e_mode_logic::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod e_mode_logic {
    #[allow(deprecated)]
    fn __abi() -> ::ethers::core::abi::Abi {
        ::ethers::core::abi::ethabi::Contract {
            constructor: ::core::option::Option::None,
            functions: ::std::collections::BTreeMap::new(),
            events: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("UserEModeSet"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Event {
                            name: ::std::borrow::ToOwned::to_owned("UserEModeSet"),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("user"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    indexed: true,
                                },
                                ::ethers::core::abi::ethabi::EventParam {
                                    name: ::std::borrow::ToOwned::to_owned("categoryId"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(8usize),
                                    indexed: false,
                                },
                            ],
                            anonymous: false,
                        },
                    ],
                ),
            ]),
            errors: ::std::collections::BTreeMap::new(),
            receive: false,
            fallback: false,
        }
    }
    ///The parsed JSON ABI of the contract.
    pub static EMODELOGIC_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(
        __abi,
    );
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = b"a\x10Ka\0:`\x0B\x82\x82\x829\x80Q`\0\x1A`s\x14a\0-WcNH{q`\xE0\x1B`\0R`\0`\x04R`$`\0\xFD[0`\0R`s\x81S\x82\x81\xF3\xFEs\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000\x14`\x80`@R`\x046\x10a\x005W`\x005`\xE0\x1C\x80c]]\xC3\x13\x14a\0:W[`\0\x80\xFD[\x81\x80\x15a\0FW`\0\x80\xFD[Pa\0Za\0U6`\x04a\x0E;V[a\0\\V[\0[`@\x80Q` \x81\x01\x82R\x83T\x81R\x82Q\x91\x83\x01Qa\0\x80\x92\x89\x92\x89\x92\x89\x92\x90a\x01'V[3`\0\x90\x81R` \x84\x90R`@\x90\x81\x90 \x80T\x91\x83\x01Q`\xFF\x90\x81\x16`\xFF\x19\x84\x16\x17\x90\x91U\x16\x80\x15a\0\xE0Wa\0\xDD\x87\x87\x87\x86`@Q\x80` \x01`@R\x90\x81`\0\x82\x01T\x81RPP3\x87`@\x01Q\x88`\0\x01Q\x89` \x01Qa\x02KV[PP[`@\x80\x83\x01Q\x90Q`\xFF\x90\x91\x16\x81R3\x90\x7F\xD7(\xDA\x87_\xC8\x89D\xCB\xF1v8\xBC\xBEJ\xF0\xEE\xDA\xEFc\xBE\xCD\x1D\x1CW\xCC\t~\xB4`\x8D\x84\x90` \x01`@Q\x80\x91\x03\x90\xA2PPPPPPPV[`\xFF\x81\x16\x15\x80a\x01RWP`\xFF\x81\x16`\0\x90\x81R` \x85\x90R`@\x90 Tb\x01\0\0\x90\x04a\xFF\xFF\x16\x15\x15[`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a\x06\xA7`\xF3\x1B\x81RP\x90a\x01\x94W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[`@Q\x80\x91\x03\x90\xFD[P\x82Qa\x01\xA0Wa\x02CV[`\xFF\x81\x16\x15a\x02CW`\0[\x82\x81\x10\x15a\x02AWa\x01\xBE\x84\x82a\x02\xF7V[\x15a\x029W`\0\x81\x81R` \x87\x81R`@\x80\x83 T`\x01`\x01`\xA0\x1B\x03\x16\x83R\x89\x82R\x91\x82\x90 \x82Q\x91\x82\x01\x90\x92R\x90T\x80\x82R`\xFF\x84\x81\x16\x91`\xA8\x1C\x16\x14`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a\x06\xA7`\xF3\x1B\x81RP\x90a\x026W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP[`\x01\x01a\x01\xACV[P[PPPPPPV[`\0\x80`\0\x80a\x02\x98\x8C\x8C\x8C`@Q\x80`\xA0\x01`@R\x80\x8E\x81R` \x01\x8B\x81R` \x01\x8D`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01\x8A`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01\x8C`\xFF\x16\x81RPa\x03DV[\x95P\x95PPPPPg\r\xE0\xB6\xB3\xA7d\0\0\x82\x10\x15`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a35`\xF0\x1B\x81RP\x90a\x02\xE5W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[P\x90\x9B\x90\x9AP\x98PPPPPPPPPV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\0\x90`\x80\x83\x10a\x034W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP\x90Q`\x01\x91\x82\x1B\x1C\x16\x15\x15\x90V[`\0\x80`\0\x80`\0\x80a\x03Z\x87`\0\x01QQ\x15\x90V[\x15a\x03xWP`\0\x94P\x84\x93P\x83\x92P\x82\x91P`\0\x19\x90P\x81a\x08\x18V[a\x04\x1A`@Q\x80a\x02`\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01`\0\x15\x15\x81R` \x01`\0\x15\x15\x81RP\x90V[`\x80\x88\x01Q`\xFF\x16\x15a\x04_W`\x80\x88\x01Q`\xFF\x16`\0\x90\x81R` \x8A\x90R`@\x90 ``\x89\x01Qa\x04L\x91\x90a\x08%V[a\x01\x80\x84\x01Ra\x01\xC0\x83\x01Ra\x01\xA0\x82\x01R[\x87` \x01Q\x81`\xC0\x01Q\x10\x15a\x07>W`\xC0\x81\x01Q\x88Qa\x04\x7F\x91a\x08\xD1V[a\x04\x93W`\xC0\x81\x01\x80Q`\x01\x01\x90Ra\x04_V[`\xC0\x81\x01Q`\0\x90\x81R` \x8B\x90R`@\x90 T`\x01`\x01`\xA0\x1B\x03\x16a\x02\0\x82\x01\x81\x90Ra\x04\xCCW`\xC0\x81\x01\x80Q`\x01\x01\x90Ra\x04_V[a\x02\0\x81\x01Q`\x01`\x01`\xA0\x1B\x03\x16`\0\x90\x81R` \x8C\x81R`@\x91\x82\x90 \x82Q\x80\x83\x01\x90\x93R\x80T\x92\x83\x90R`\xFF`\xA8\x84\x90\x1C\x81\x16a\x01\xE0\x86\x01R`0\x84\x90\x1C\x16``\x85\x01\x81\x90Ra\xFF\xFF`\x10\x85\x90\x1C\x81\x16`\xA0\x87\x01R\x90\x93\x16`\x80\x85\x01R`\n\x92\x90\x92\n\x90\x83\x01Ra\x01\x80\x82\x01Q\x15\x80\x15\x90a\x05UWP\x81a\x01\xE0\x01Q\x89`\x80\x01Q`\xFF\x16\x14[a\x05\xD3W``\x89\x01Qa\x02\0\x83\x01Q`@Qc\xB3Yo\x07`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x91\x82\x16`\x04\x82\x01R\x91\x16\x90c\xB3Yo\x07\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x05\xAAW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x05\xCE\x91\x90a\x0F`V[a\x05\xDAV[\x81a\x01\x80\x01Q[\x82R`\xA0\x82\x01Q\x15\x80\x15\x90a\x05\xFAWP`\xC0\x82\x01Q\x89Qa\x05\xFA\x91a\t!V[\x15a\x06\xEAWa\x06\x17\x89`@\x01Q\x82\x84`\0\x01Q\x85` \x01Qa\tpV[`@\x83\x01\x81\x90Ra\x01\0\x83\x01\x80Qa\x060\x90\x83\x90a\x0F\x8FV[\x90RP`\x80\x89\x01Qa\x01\xE0\x83\x01Qa\x06K\x91`\xFF\x16\x90a\n)V[\x15\x15a\x02@\x83\x01R`\x80\x82\x01Q\x15a\x06\xA1W\x81a\x02@\x01Qa\x06qW\x81`\x80\x01Qa\x06xV[\x81a\x01\xA0\x01Q[\x82`@\x01Qa\x06\x87\x91\x90a\x0F\xA7V[\x82a\x01@\x01\x81\x81Qa\x06\x99\x91\x90a\x0F\x8FV[\x90RPa\x06\xAAV[`\x01a\x02 \x83\x01R[\x81a\x02@\x01Qa\x06\xBEW\x81`\xA0\x01Qa\x06\xC5V[\x81a\x01\xC0\x01Q[\x82`@\x01Qa\x06\xD4\x91\x90a\x0F\xA7V[\x82a\x01`\x01\x81\x81Qa\x06\xE6\x91\x90a\x0F\x8FV[\x90RP[`\xC0\x82\x01Q\x89Qa\x06\xFA\x91a\x02\xF7V[\x15a\x07-Wa\x07\x17\x89`@\x01Q\x82\x84`\0\x01Q\x85` \x01Qa\n@V[\x82a\x01 \x01\x81\x81Qa\x07)\x91\x90a\x0F\x8FV[\x90RP[P`\xC0\x81\x01\x80Q`\x01\x01\x90Ra\x04_V[a\x01\0\x81\x01Qa\x07OW`\0a\x07jV[\x80a\x01\0\x01Q\x81a\x01@\x01Q\x81a\x07hWa\x07ha\x0F\xC6V[\x04[a\x01@\x82\x01Ra\x01\0\x81\x01Qa\x07\x81W`\0a\x07\x9CV[\x80a\x01\0\x01Q\x81a\x01`\x01Q\x81a\x07\x9AWa\x07\x9Aa\x0F\xC6V[\x04[a\x01`\x82\x01Ra\x01 \x81\x01Q\x15a\x07\xDEWa\x07\xD9\x81a\x01 \x01Qa\x07\xD3\x83a\x01`\x01Q\x84a\x01\0\x01Qa\x0Bt\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[\x90a\x0B\x9AV[a\x07\xE2V[`\0\x19[`\xE0\x82\x01\x81\x90Ra\x01\0\x82\x01Qa\x01 \x83\x01Qa\x01@\x84\x01Qa\x01`\x85\x01Qa\x02 \x90\x95\x01Q\x92\x9AP\x90\x98P\x96P\x91\x94P\x92P\x90P[\x94\x99\x93\x98P\x94P\x94P\x94PV[\x81T`\0\x90\x81\x90\x81\x90\x81\x90f\x01\0\0\0\0\0\0\x90\x04`\x01`\x01`\xA0\x1B\x03\x16\x80\x15a\x08\xB6W`@Qc\xB3Yo\x07`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x82\x81\x16`\x04\x83\x01R\x87\x16\x90c\xB3Yo\x07\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x08\x8FW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x08\xB3\x91\x90a\x0F`V[\x91P[P\x94Ta\xFF\xFF\x80\x82\x16\x97b\x01\0\0\x90\x92\x04\x16\x95\x94P\x92PPPV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\0\x90`\x80\x83\x10a\t\x0EW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP\x90Q`\x01\x91\x90\x91\x1B\x1C`\x03\x16\x15\x15\x90V[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\0\x90`\x80\x83\x10a\t^W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP\x90Q`\x01\x91\x82\x1B\x82\x01\x1C\x16\x15\x15\x90V[`\0\x80a\t|\x85a\x0B\xD1V[`\x04\x86\x81\x01T`@Qc\x0E\xD1'\x9F`\xE1\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x8A\x81\x16\x93\x82\x01\x93\x90\x93R\x92\x93P`\0\x92\x87\x92a\n\x02\x92\x86\x92\x91\x16\x90c\x1D\xA2O>\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\t\xD8W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\t\xFC\x91\x90a\x0F`V[\x90a\x0C)V[a\n\x0C\x91\x90a\x0F\xA7V[\x90P\x83\x81\x81a\n\x1DWa\n\x1Da\x0F\xC6V[\x04\x97\x96PPPPPPPV[`\0\x82\x15\x80\x15\x90a\n9WP\x82\x82\x14[\x93\x92PPPV[`\x06\x83\x01T`@Qc\x0E\xD1'\x9F`\xE1\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x86\x81\x16`\x04\x83\x01R`\0\x92\x83\x92\x91\x16\x90c\x1D\xA2O>\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\n\x90W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\n\xB4\x91\x90a\x0F`V[\x90P\x80\x15a\n\xD2Wa\n\xCFa\n\xC8\x86a\x0CmV[\x82\x90a\x0C)V[\x90P[`\x05\x85\x01T`@Qcp\xA0\x821`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x88\x81\x16`\x04\x83\x01R\x90\x91\x16\x90cp\xA0\x821\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0B\x1EW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0BB\x91\x90a\x0F`V[a\x0BL\x90\x82a\x0F\x8FV[\x90Pa\x0BX\x81\x85a\x0F\xA7V[\x90P\x82\x81\x81a\x0BiWa\x0Bia\x0F\xC6V[\x04\x96\x95PPPPPPV[`\0\x81\x15a\x13\x88\x19\x83\x90\x04\x84\x11\x15\x17a\x0B\x8CW`\0\x80\xFD[Pa'\x10\x91\x02a\x13\x88\x01\x04\x90V[`\0\x81\x15g\r\xE0\xB6\xB3\xA7d\0\0`\x02\x84\x04\x19\x04\x84\x11\x17\x15a\x0B\xBAW`\0\x80\xFD[Pg\r\xE0\xB6\xB3\xA7d\0\0\x91\x90\x91\x02`\x02\x82\x04\x01\x04\x90V[`\x03\x81\x01T`\0\x90`\x01`\x80\x1B\x90\x04d\xFF\xFF\xFF\xFF\xFF\x16B\x81\x14\x15a\x0C\x01WPP`\x01\x01T`\x01`\x01`\x80\x1B\x03\x16\x90V[`\x01\x83\x01Ta\n9\x90`\x01`\x01`\x80\x1B\x03\x80\x82\x16\x91a\t\xFC\x91`\x01`\x80\x1B\x90\x91\x04\x16\x84a\x0C\xC5V[`\0\x81\x15k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x19\x83\x90\x04\x84\x11\x15\x17a\x0CKW`\0\x80\xFD[Pk\x03;.<\x9F\xD0\x80<\xE8\0\0\0\x91\x02k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x01\x04\x90V[`\x03\x81\x01T`\0\x90`\x01`\x80\x1B\x90\x04d\xFF\xFF\xFF\xFF\xFF\x16B\x81\x14\x15a\x0C\x9DWPP`\x02\x01T`\x01`\x01`\x80\x1B\x03\x16\x90V[`\x02\x83\x01Ta\n9\x90`\x01`\x01`\x80\x1B\x03\x80\x82\x16\x91a\t\xFC\x91`\x01`\x80\x1B\x90\x91\x04\x16\x84a\r\nV[`\0\x80a\x0C\xD9d\xFF\xFF\xFF\xFF\xFF\x84\x16Ba\x0F\xDCV[a\x0C\xE3\x90\x85a\x0F\xA7V[c\x01\xE13\x80\x90\x04\x90Pa\r\x02\x81k\x03;.<\x9F\xD0\x80<\xE8\0\0\0a\x0F\x8FV[\x94\x93PPPPV[`\0a\n9\x83\x83B`\0\x80a\r&d\xFF\xFF\xFF\xFF\xFF\x85\x16\x84a\x0F\xDCV[\x90P\x80a\rBWk\x03;.<\x9F\xD0\x80<\xE8\0\0\0\x91PPa\n9V[`\0\x19\x81\x01`\0\x80\x80`\x02\x85\x11a\rZW`\0a\r_V[`\x02\x85\x03[\x92Pf\x03\x88\x82\x91\\@\0a\rs\x8A\x80a\x0C)V[\x81a\r\x80Wa\r\x80a\x0F\xC6V[\x04\x91Pc\x01\xE13\x80a\r\x92\x83\x8Ba\x0C)V[\x81a\r\x9FWa\r\x9Fa\x0F\xC6V[\x04\x90P`\0\x82a\r\xAF\x86\x88a\x0F\xA7V[a\r\xB9\x91\x90a\x0F\xA7V[`\x02\x90\x04\x90P`\0\x82\x85a\r\xCD\x88\x8Aa\x0F\xA7V[a\r\xD7\x91\x90a\x0F\xA7V[a\r\xE1\x91\x90a\x0F\xA7V[`\x06\x90\x04\x90P\x80\x82c\x01\xE13\x80a\r\xF8\x8A\x8Fa\x0F\xA7V[a\x0E\x02\x91\x90a\x0F\xF3V[a\x0E\x18\x90k\x03;.<\x9F\xD0\x80<\xE8\0\0\0a\x0F\x8FV[a\x0E\"\x91\x90a\x0F\x8FV[a\x0E,\x91\x90a\x0F\x8FV[\x9B\x9APPPPPPPPPPPV[`\0\x80`\0\x80`\0\x80\x86\x88\x03a\x01\0\x81\x12\x15a\x0EVW`\0\x80\xFD[\x875\x96P` \x88\x015\x95P`@\x88\x015\x94P``\x80\x89\x015\x94P`\x80\x89\x015\x93P`\x9F\x19\x82\x01\x12\x15a\x0E\x87W`\0\x80\xFD[P`@Q``\x81\x01\x81\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17\x15a\x0E\xB9WcNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`@R`\xA0\x88\x015\x81R`\xC0\x88\x015`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x0E\xDDW`\0\x80\xFD[` \x82\x01R`\xE0\x88\x015`\xFF\x81\x16\x81\x14a\x0E\xF6W`\0\x80\xFD[\x80`@\x83\x01RP\x80\x91PP\x92\x95P\x92\x95P\x92\x95V[`\0` \x80\x83R\x83Q\x80\x82\x85\x01R`\0[\x81\x81\x10\x15a\x0F8W\x85\x81\x01\x83\x01Q\x85\x82\x01`@\x01R\x82\x01a\x0F\x1CV[\x81\x81\x11\x15a\x0FJW`\0`@\x83\x87\x01\x01R[P`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01`@\x01\x93\x92PPPV[`\0` \x82\x84\x03\x12\x15a\x0FrW`\0\x80\xFD[PQ\x91\x90PV[cNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[`\0\x82\x19\x82\x11\x15a\x0F\xA2Wa\x0F\xA2a\x0FyV[P\x01\x90V[`\0\x81`\0\x19\x04\x83\x11\x82\x15\x15\x16\x15a\x0F\xC1Wa\x0F\xC1a\x0FyV[P\x02\x90V[cNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[`\0\x82\x82\x10\x15a\x0F\xEEWa\x0F\xEEa\x0FyV[P\x03\x90V[`\0\x82a\x10\x10WcNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[P\x04\x90V\xFE\xA2dipfsX\"\x12 b0Z\xAB\x12\x96\xF3\xA0\x08\xC8\x83\x9C\x80to\xB3CPY\xC2\xB4\xE8\xB4^\xB6\xFD\x15\x1B\xCF?\x8C\xD8dsolcC\0\x08\n\x003";
    /// The bytecode of the contract.
    pub static EMODELOGIC_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = b"s\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000\x14`\x80`@R`\x046\x10a\x005W`\x005`\xE0\x1C\x80c]]\xC3\x13\x14a\0:W[`\0\x80\xFD[\x81\x80\x15a\0FW`\0\x80\xFD[Pa\0Za\0U6`\x04a\x0E;V[a\0\\V[\0[`@\x80Q` \x81\x01\x82R\x83T\x81R\x82Q\x91\x83\x01Qa\0\x80\x92\x89\x92\x89\x92\x89\x92\x90a\x01'V[3`\0\x90\x81R` \x84\x90R`@\x90\x81\x90 \x80T\x91\x83\x01Q`\xFF\x90\x81\x16`\xFF\x19\x84\x16\x17\x90\x91U\x16\x80\x15a\0\xE0Wa\0\xDD\x87\x87\x87\x86`@Q\x80` \x01`@R\x90\x81`\0\x82\x01T\x81RPP3\x87`@\x01Q\x88`\0\x01Q\x89` \x01Qa\x02KV[PP[`@\x80\x83\x01Q\x90Q`\xFF\x90\x91\x16\x81R3\x90\x7F\xD7(\xDA\x87_\xC8\x89D\xCB\xF1v8\xBC\xBEJ\xF0\xEE\xDA\xEFc\xBE\xCD\x1D\x1CW\xCC\t~\xB4`\x8D\x84\x90` \x01`@Q\x80\x91\x03\x90\xA2PPPPPPPV[`\xFF\x81\x16\x15\x80a\x01RWP`\xFF\x81\x16`\0\x90\x81R` \x85\x90R`@\x90 Tb\x01\0\0\x90\x04a\xFF\xFF\x16\x15\x15[`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a\x06\xA7`\xF3\x1B\x81RP\x90a\x01\x94W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[`@Q\x80\x91\x03\x90\xFD[P\x82Qa\x01\xA0Wa\x02CV[`\xFF\x81\x16\x15a\x02CW`\0[\x82\x81\x10\x15a\x02AWa\x01\xBE\x84\x82a\x02\xF7V[\x15a\x029W`\0\x81\x81R` \x87\x81R`@\x80\x83 T`\x01`\x01`\xA0\x1B\x03\x16\x83R\x89\x82R\x91\x82\x90 \x82Q\x91\x82\x01\x90\x92R\x90T\x80\x82R`\xFF\x84\x81\x16\x91`\xA8\x1C\x16\x14`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a\x06\xA7`\xF3\x1B\x81RP\x90a\x026W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP[`\x01\x01a\x01\xACV[P[PPPPPPV[`\0\x80`\0\x80a\x02\x98\x8C\x8C\x8C`@Q\x80`\xA0\x01`@R\x80\x8E\x81R` \x01\x8B\x81R` \x01\x8D`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01\x8A`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01\x8C`\xFF\x16\x81RPa\x03DV[\x95P\x95PPPPPg\r\xE0\xB6\xB3\xA7d\0\0\x82\x10\x15`@Q\x80`@\x01`@R\x80`\x02\x81R` \x01a35`\xF0\x1B\x81RP\x90a\x02\xE5W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[P\x90\x9B\x90\x9AP\x98PPPPPPPPPV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\0\x90`\x80\x83\x10a\x034W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP\x90Q`\x01\x91\x82\x1B\x1C\x16\x15\x15\x90V[`\0\x80`\0\x80`\0\x80a\x03Z\x87`\0\x01QQ\x15\x90V[\x15a\x03xWP`\0\x94P\x84\x93P\x83\x92P\x82\x91P`\0\x19\x90P\x81a\x08\x18V[a\x04\x1A`@Q\x80a\x02`\x01`@R\x80`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0\x81R` \x01`\0`\x01`\x01`\xA0\x1B\x03\x16\x81R` \x01`\0\x15\x15\x81R` \x01`\0\x15\x15\x81RP\x90V[`\x80\x88\x01Q`\xFF\x16\x15a\x04_W`\x80\x88\x01Q`\xFF\x16`\0\x90\x81R` \x8A\x90R`@\x90 ``\x89\x01Qa\x04L\x91\x90a\x08%V[a\x01\x80\x84\x01Ra\x01\xC0\x83\x01Ra\x01\xA0\x82\x01R[\x87` \x01Q\x81`\xC0\x01Q\x10\x15a\x07>W`\xC0\x81\x01Q\x88Qa\x04\x7F\x91a\x08\xD1V[a\x04\x93W`\xC0\x81\x01\x80Q`\x01\x01\x90Ra\x04_V[`\xC0\x81\x01Q`\0\x90\x81R` \x8B\x90R`@\x90 T`\x01`\x01`\xA0\x1B\x03\x16a\x02\0\x82\x01\x81\x90Ra\x04\xCCW`\xC0\x81\x01\x80Q`\x01\x01\x90Ra\x04_V[a\x02\0\x81\x01Q`\x01`\x01`\xA0\x1B\x03\x16`\0\x90\x81R` \x8C\x81R`@\x91\x82\x90 \x82Q\x80\x83\x01\x90\x93R\x80T\x92\x83\x90R`\xFF`\xA8\x84\x90\x1C\x81\x16a\x01\xE0\x86\x01R`0\x84\x90\x1C\x16``\x85\x01\x81\x90Ra\xFF\xFF`\x10\x85\x90\x1C\x81\x16`\xA0\x87\x01R\x90\x93\x16`\x80\x85\x01R`\n\x92\x90\x92\n\x90\x83\x01Ra\x01\x80\x82\x01Q\x15\x80\x15\x90a\x05UWP\x81a\x01\xE0\x01Q\x89`\x80\x01Q`\xFF\x16\x14[a\x05\xD3W``\x89\x01Qa\x02\0\x83\x01Q`@Qc\xB3Yo\x07`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x91\x82\x16`\x04\x82\x01R\x91\x16\x90c\xB3Yo\x07\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x05\xAAW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x05\xCE\x91\x90a\x0F`V[a\x05\xDAV[\x81a\x01\x80\x01Q[\x82R`\xA0\x82\x01Q\x15\x80\x15\x90a\x05\xFAWP`\xC0\x82\x01Q\x89Qa\x05\xFA\x91a\t!V[\x15a\x06\xEAWa\x06\x17\x89`@\x01Q\x82\x84`\0\x01Q\x85` \x01Qa\tpV[`@\x83\x01\x81\x90Ra\x01\0\x83\x01\x80Qa\x060\x90\x83\x90a\x0F\x8FV[\x90RP`\x80\x89\x01Qa\x01\xE0\x83\x01Qa\x06K\x91`\xFF\x16\x90a\n)V[\x15\x15a\x02@\x83\x01R`\x80\x82\x01Q\x15a\x06\xA1W\x81a\x02@\x01Qa\x06qW\x81`\x80\x01Qa\x06xV[\x81a\x01\xA0\x01Q[\x82`@\x01Qa\x06\x87\x91\x90a\x0F\xA7V[\x82a\x01@\x01\x81\x81Qa\x06\x99\x91\x90a\x0F\x8FV[\x90RPa\x06\xAAV[`\x01a\x02 \x83\x01R[\x81a\x02@\x01Qa\x06\xBEW\x81`\xA0\x01Qa\x06\xC5V[\x81a\x01\xC0\x01Q[\x82`@\x01Qa\x06\xD4\x91\x90a\x0F\xA7V[\x82a\x01`\x01\x81\x81Qa\x06\xE6\x91\x90a\x0F\x8FV[\x90RP[`\xC0\x82\x01Q\x89Qa\x06\xFA\x91a\x02\xF7V[\x15a\x07-Wa\x07\x17\x89`@\x01Q\x82\x84`\0\x01Q\x85` \x01Qa\n@V[\x82a\x01 \x01\x81\x81Qa\x07)\x91\x90a\x0F\x8FV[\x90RP[P`\xC0\x81\x01\x80Q`\x01\x01\x90Ra\x04_V[a\x01\0\x81\x01Qa\x07OW`\0a\x07jV[\x80a\x01\0\x01Q\x81a\x01@\x01Q\x81a\x07hWa\x07ha\x0F\xC6V[\x04[a\x01@\x82\x01Ra\x01\0\x81\x01Qa\x07\x81W`\0a\x07\x9CV[\x80a\x01\0\x01Q\x81a\x01`\x01Q\x81a\x07\x9AWa\x07\x9Aa\x0F\xC6V[\x04[a\x01`\x82\x01Ra\x01 \x81\x01Q\x15a\x07\xDEWa\x07\xD9\x81a\x01 \x01Qa\x07\xD3\x83a\x01`\x01Q\x84a\x01\0\x01Qa\x0Bt\x90\x91\x90c\xFF\xFF\xFF\xFF\x16V[\x90a\x0B\x9AV[a\x07\xE2V[`\0\x19[`\xE0\x82\x01\x81\x90Ra\x01\0\x82\x01Qa\x01 \x83\x01Qa\x01@\x84\x01Qa\x01`\x85\x01Qa\x02 \x90\x95\x01Q\x92\x9AP\x90\x98P\x96P\x91\x94P\x92P\x90P[\x94\x99\x93\x98P\x94P\x94P\x94PV[\x81T`\0\x90\x81\x90\x81\x90\x81\x90f\x01\0\0\0\0\0\0\x90\x04`\x01`\x01`\xA0\x1B\x03\x16\x80\x15a\x08\xB6W`@Qc\xB3Yo\x07`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x82\x81\x16`\x04\x83\x01R\x87\x16\x90c\xB3Yo\x07\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x08\x8FW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x08\xB3\x91\x90a\x0F`V[\x91P[P\x94Ta\xFF\xFF\x80\x82\x16\x97b\x01\0\0\x90\x92\x04\x16\x95\x94P\x92PPPV[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\0\x90`\x80\x83\x10a\t\x0EW`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP\x90Q`\x01\x91\x90\x91\x1B\x1C`\x03\x16\x15\x15\x90V[`@\x80Q\x80\x82\x01\x90\x91R`\x02\x81Ra\r\xCD`\xF2\x1B` \x82\x01R`\0\x90`\x80\x83\x10a\t^W`@QbF\x1B\xCD`\xE5\x1B\x81R`\x04\x01a\x01\x8B\x91\x90a\x0F\x0BV[PP\x90Q`\x01\x91\x82\x1B\x82\x01\x1C\x16\x15\x15\x90V[`\0\x80a\t|\x85a\x0B\xD1V[`\x04\x86\x81\x01T`@Qc\x0E\xD1'\x9F`\xE1\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x8A\x81\x16\x93\x82\x01\x93\x90\x93R\x92\x93P`\0\x92\x87\x92a\n\x02\x92\x86\x92\x91\x16\x90c\x1D\xA2O>\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\t\xD8W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\t\xFC\x91\x90a\x0F`V[\x90a\x0C)V[a\n\x0C\x91\x90a\x0F\xA7V[\x90P\x83\x81\x81a\n\x1DWa\n\x1Da\x0F\xC6V[\x04\x97\x96PPPPPPPV[`\0\x82\x15\x80\x15\x90a\n9WP\x82\x82\x14[\x93\x92PPPV[`\x06\x83\x01T`@Qc\x0E\xD1'\x9F`\xE1\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x86\x81\x16`\x04\x83\x01R`\0\x92\x83\x92\x91\x16\x90c\x1D\xA2O>\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\n\x90W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\n\xB4\x91\x90a\x0F`V[\x90P\x80\x15a\n\xD2Wa\n\xCFa\n\xC8\x86a\x0CmV[\x82\x90a\x0C)V[\x90P[`\x05\x85\x01T`@Qcp\xA0\x821`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x88\x81\x16`\x04\x83\x01R\x90\x91\x16\x90cp\xA0\x821\x90`$\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x0B\x1EW=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x0BB\x91\x90a\x0F`V[a\x0BL\x90\x82a\x0F\x8FV[\x90Pa\x0BX\x81\x85a\x0F\xA7V[\x90P\x82\x81\x81a\x0BiWa\x0Bia\x0F\xC6V[\x04\x96\x95PPPPPPV[`\0\x81\x15a\x13\x88\x19\x83\x90\x04\x84\x11\x15\x17a\x0B\x8CW`\0\x80\xFD[Pa'\x10\x91\x02a\x13\x88\x01\x04\x90V[`\0\x81\x15g\r\xE0\xB6\xB3\xA7d\0\0`\x02\x84\x04\x19\x04\x84\x11\x17\x15a\x0B\xBAW`\0\x80\xFD[Pg\r\xE0\xB6\xB3\xA7d\0\0\x91\x90\x91\x02`\x02\x82\x04\x01\x04\x90V[`\x03\x81\x01T`\0\x90`\x01`\x80\x1B\x90\x04d\xFF\xFF\xFF\xFF\xFF\x16B\x81\x14\x15a\x0C\x01WPP`\x01\x01T`\x01`\x01`\x80\x1B\x03\x16\x90V[`\x01\x83\x01Ta\n9\x90`\x01`\x01`\x80\x1B\x03\x80\x82\x16\x91a\t\xFC\x91`\x01`\x80\x1B\x90\x91\x04\x16\x84a\x0C\xC5V[`\0\x81\x15k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x19\x83\x90\x04\x84\x11\x15\x17a\x0CKW`\0\x80\xFD[Pk\x03;.<\x9F\xD0\x80<\xE8\0\0\0\x91\x02k\x01\x9D\x97\x1EO\xE8@\x1Et\0\0\0\x01\x04\x90V[`\x03\x81\x01T`\0\x90`\x01`\x80\x1B\x90\x04d\xFF\xFF\xFF\xFF\xFF\x16B\x81\x14\x15a\x0C\x9DWPP`\x02\x01T`\x01`\x01`\x80\x1B\x03\x16\x90V[`\x02\x83\x01Ta\n9\x90`\x01`\x01`\x80\x1B\x03\x80\x82\x16\x91a\t\xFC\x91`\x01`\x80\x1B\x90\x91\x04\x16\x84a\r\nV[`\0\x80a\x0C\xD9d\xFF\xFF\xFF\xFF\xFF\x84\x16Ba\x0F\xDCV[a\x0C\xE3\x90\x85a\x0F\xA7V[c\x01\xE13\x80\x90\x04\x90Pa\r\x02\x81k\x03;.<\x9F\xD0\x80<\xE8\0\0\0a\x0F\x8FV[\x94\x93PPPPV[`\0a\n9\x83\x83B`\0\x80a\r&d\xFF\xFF\xFF\xFF\xFF\x85\x16\x84a\x0F\xDCV[\x90P\x80a\rBWk\x03;.<\x9F\xD0\x80<\xE8\0\0\0\x91PPa\n9V[`\0\x19\x81\x01`\0\x80\x80`\x02\x85\x11a\rZW`\0a\r_V[`\x02\x85\x03[\x92Pf\x03\x88\x82\x91\\@\0a\rs\x8A\x80a\x0C)V[\x81a\r\x80Wa\r\x80a\x0F\xC6V[\x04\x91Pc\x01\xE13\x80a\r\x92\x83\x8Ba\x0C)V[\x81a\r\x9FWa\r\x9Fa\x0F\xC6V[\x04\x90P`\0\x82a\r\xAF\x86\x88a\x0F\xA7V[a\r\xB9\x91\x90a\x0F\xA7V[`\x02\x90\x04\x90P`\0\x82\x85a\r\xCD\x88\x8Aa\x0F\xA7V[a\r\xD7\x91\x90a\x0F\xA7V[a\r\xE1\x91\x90a\x0F\xA7V[`\x06\x90\x04\x90P\x80\x82c\x01\xE13\x80a\r\xF8\x8A\x8Fa\x0F\xA7V[a\x0E\x02\x91\x90a\x0F\xF3V[a\x0E\x18\x90k\x03;.<\x9F\xD0\x80<\xE8\0\0\0a\x0F\x8FV[a\x0E\"\x91\x90a\x0F\x8FV[a\x0E,\x91\x90a\x0F\x8FV[\x9B\x9APPPPPPPPPPPV[`\0\x80`\0\x80`\0\x80\x86\x88\x03a\x01\0\x81\x12\x15a\x0EVW`\0\x80\xFD[\x875\x96P` \x88\x015\x95P`@\x88\x015\x94P``\x80\x89\x015\x94P`\x80\x89\x015\x93P`\x9F\x19\x82\x01\x12\x15a\x0E\x87W`\0\x80\xFD[P`@Q``\x81\x01\x81\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17\x15a\x0E\xB9WcNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`@R`\xA0\x88\x015\x81R`\xC0\x88\x015`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x0E\xDDW`\0\x80\xFD[` \x82\x01R`\xE0\x88\x015`\xFF\x81\x16\x81\x14a\x0E\xF6W`\0\x80\xFD[\x80`@\x83\x01RP\x80\x91PP\x92\x95P\x92\x95P\x92\x95V[`\0` \x80\x83R\x83Q\x80\x82\x85\x01R`\0[\x81\x81\x10\x15a\x0F8W\x85\x81\x01\x83\x01Q\x85\x82\x01`@\x01R\x82\x01a\x0F\x1CV[\x81\x81\x11\x15a\x0FJW`\0`@\x83\x87\x01\x01R[P`\x1F\x01`\x1F\x19\x16\x92\x90\x92\x01`@\x01\x93\x92PPPV[`\0` \x82\x84\x03\x12\x15a\x0FrW`\0\x80\xFD[PQ\x91\x90PV[cNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[`\0\x82\x19\x82\x11\x15a\x0F\xA2Wa\x0F\xA2a\x0FyV[P\x01\x90V[`\0\x81`\0\x19\x04\x83\x11\x82\x15\x15\x16\x15a\x0F\xC1Wa\x0F\xC1a\x0FyV[P\x02\x90V[cNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[`\0\x82\x82\x10\x15a\x0F\xEEWa\x0F\xEEa\x0FyV[P\x03\x90V[`\0\x82a\x10\x10WcNH{q`\xE0\x1B`\0R`\x12`\x04R`$`\0\xFD[P\x04\x90V\xFE\xA2dipfsX\"\x12 b0Z\xAB\x12\x96\xF3\xA0\x08\xC8\x83\x9C\x80to\xB3CPY\xC2\xB4\xE8\xB4^\xB6\xFD\x15\x1B\xCF?\x8C\xD8dsolcC\0\x08\n\x003";
    /// The deployed bytecode of the contract.
    pub static EMODELOGIC_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct EModeLogic<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for EModeLogic<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for EModeLogic<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for EModeLogic<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for EModeLogic<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(::core::stringify!(EModeLogic)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> EModeLogic<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    EMODELOGIC_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                EMODELOGIC_ABI.clone(),
                EMODELOGIC_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Gets the contract's `UserEModeSet` event
        pub fn user_e_mode_set_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            UserEModeSetFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            UserEModeSetFilter,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for EModeLogic<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "UserEModeSet", abi = "UserEModeSet(address,uint8)")]
    pub struct UserEModeSetFilter {
        #[ethevent(indexed)]
        pub user: ::ethers::core::types::Address,
        pub category_id: u8,
    }
}
